---
import CopyToClipboard from "@components/CopyToClipboard";
import Base from "@layouts/Base.astro";
import { getSession } from "auth-astro/server";

console.log(Astro.cookies.get("next-auth.session-token"));
const session = await getSession(Astro.request);

const { id } = Astro.params;
const pack = await fetch(`http://localhost:8080/v1/packs/${id}`, {
  mode: "cors",
  credentials: "include",
}).then((res) => res.json());
const assets = [] as any[];
---

<Base title={pack.name}>
  <h2 class="text-3xl mb-6 font-bold">
    {pack.name}
    <span class="text-lg ml-2 align-middle">{pack.version}</span>
  </h2>
  <div class="mt-2 flex flex-col sm:flex-row">
    <div class="grow mb-4">
      <p>{pack.description}</p>
    </div>
    <div>
      <h3 class="text-2xl mb-1 font-bold">Slug</h3>
      <CopyToClipboard text={pack.slug} client:load />
      <h3 class="text-2xl mt-5 mb-1 font-bold">Last Modified</h3>
      <p>{new Date(pack.last_modified).toLocaleString()}</p>
      <h3 class="text-2xl mt-4 mb-1 font-bold">Tags</h3>
      <div>
        {pack.tags.map((tag: string) => <span class="mr-2">{tag}</span>)}
      </div>
      <h3 class="text-2xl mt-4 mb-3 font-bold">Actions</h3>
      <div>
        {
          session?.user?.id === pack.author && (
            <a
              class="inline-flex items-center text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900"
              href={Astro.url + "/delete"}
            >
              <svg
                class="w-3.5 h-3.5 mr-2"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 18 20"
              >
                <path d="M17 4h-4V2a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v2H1a1 1 0 0 0 0 2h1v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1a1 1 0 1 0 0-2ZM7 2h4v2H7V2Zm1 14a1 1 0 1 1-2 0V8a1 1 0 0 1 2 0v8Zm4 0a1 1 0 0 1-2 0V8a1 1 0 0 1 2 0v8Z" />
              </svg>
              <span>Delete Pack</span>
            </a>
          )
        }
      </div>
    </div>
  </div>
  <div
    class="grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-2"
  >
    {
      assets.slice(20, 40).map((asset: any) => (
        <div class="border">
          <img
            class="object-top object-cover w-full h-[200px] max-h-[200px] border-b dark:bg-sky-950"
            src={`https://blueprintstore.blob.core.windows.net/assets/${asset.id}`}
          />
          <p class="break-words p-2">{asset.file_name}</p>
        </div>
      ))
    }
  </div>
</Base>
